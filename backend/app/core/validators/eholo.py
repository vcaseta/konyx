import pandas as pd
from fastapi import HTTPException

# ============================================================
# üßæ UTILIDADES
# ============================================================

def normalize(col: str) -> str:
    """Normaliza nombres de columnas para comparaci√≥n flexible."""
    return (
        col.strip()
        .lower()
        .replace("√°", "a")
        .replace("√©", "e")
        .replace("√≠", "i")
        .replace("√≥", "o")
        .replace("√∫", "u")
    )

# ============================================================
# üîç VALIDACI√ìN DE SESIONES (Eholo)
# ============================================================

EXPECTED_COLUMNS_SESIONES_EHOLO = [
    "profesional",
    "paciente",
    "dni",
    "comunicaci√≥n",
    "tipo",
    "fecha",
    "precio",
    "comisi√≥n centro",
    "comisi√≥n profesional",
    "bonos",
    "estado",
    "m√©todo de pago",
    "fecha de pago",
]

def validate_eholo_sesiones(df: pd.DataFrame):
    """
    Valida que el fichero de sesiones Eholo tenga exactamente las columnas esperadas
    en el orden correcto, sin faltantes, sobrantes ni errores de nombre.
    """
    cols = [normalize(c) for c in df.columns if not c.lower().startswith("unnamed")]
    expected = [normalize(c) for c in EXPECTED_COLUMNS_SESIONES_EHOLO]

    print("üßæ Columnas SESIONES detectadas:", cols)
    print("üéØ Columnas SESIONES esperadas:", expected)

    missing = [c for c in expected if c not in cols]
    extra = [c for c in cols if c not in expected]

    if missing:
        raise HTTPException(
            status_code=400,
            detail=f"El archivo de sesiones Eholo no tiene todas las columnas requeridas. Faltan: {', '.join(missing)}",
        )

    if extra:
        raise HTTPException(
            status_code=400,
            detail=f"El archivo de sesiones Eholo tiene columnas no esperadas: {', '.join(extra)}",
        )

    if cols != expected:
        raise HTTPException(
            status_code=400,
            detail="El orden de las columnas no coincide exactamente con la plantilla de sesiones Eholo.",
        )

    print("‚úÖ Validaci√≥n de sesiones Eholo completada correctamente.")
    return True


# ============================================================
# üîç VALIDACI√ìN DE CONTACTOS (Eholo)
# ============================================================

EXPECTED_COLUMNS_CONTACTOS_EHOLO = [
    "n. de ficha",
    "profesional",
    "nombre",
    "tel√©fono",
    "email",
    "documento de identidad",
    "estado",
    "etiquetas",
    "direcci√≥n",
    "tipo de sesi√≥n",
]

def validate_eholo_contactos(df: pd.DataFrame):
    """
    Valida que el fichero de contactos Eholo tenga exactamente las columnas esperadas
    en el orden correcto, sin faltantes, sobrantes ni errores de nombre.
    """
    cols = [normalize(c) for c in df.columns if not c.lower().startswith("unnamed")]
    expected = [normalize(c) for c in EXPECTED_COLUMNS_CONTACTOS_EHOLO]

    print("üßæ Columnas CONTACTOS detectadas:", cols)
    print("üéØ Columnas CONTACTOS esperadas:", expected)

    missing = [c for c in expected if c not in cols]
    extra = [c for c in cols if c not in expected]

    if missing:
        raise HTTPException(
            status_code=400,
            detail=f"El archivo de contactos Eholo no tiene todas las columnas requeridas. Faltan: {', '.join(missing)}",
        )

    if extra:
        raise HTTPException(
            status_code=400,
            detail=f"El archivo de contactos Eholo tiene columnas no esperadas: {', '.join(extra)}",
        )

    if cols != expected:
        raise HTTPException(
            status_code=400,
            detail="El orden de las columnas no coincide exactamente con la plantilla de contactos Eholo.",
        )

    print("‚úÖ Validaci√≥n de contactos Eholo completada correctamente.")
    return True


